version: '3'

services:
  elasticsearch:
    image: elasticsearch:$ELK_VERSION
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - elk

  logstash:
    container_name: logstash
    build:
      context: .docker/logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./.docker/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./.docker/logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - 5000:5000
      - 9600:9600
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    container_name: kibana
    build:
      context: .docker/kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./.docker/kibana/config/:/usr/share/kibana/config:ro
    ports:
      - 5601:5601
    networks:
      - elk
    depends_on:
      - elasticsearch

  rabbit:
    container_name: rabbit
    image: "rabbitmq:3-management"
    hostname: "rabbit"
    ports:
      - 15672:15672
      - 5672:5672
    labels:
      NAME: "rabbitmq1"
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq:rw
      - ./.docker/rabbitmq/definitions.json:/opt/definitions.json:ro
      - ./.docker/rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
    networks:
      - elk

networks:
  elk:
    driver: bridge
